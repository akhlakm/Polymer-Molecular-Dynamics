[metadata]
name = pmd
author = Kuan-Hsuan (Kevin) Shen
author_email = kevinshen56714@gmail.com
description = Automated generation of LAMMPS data and input files for polymer molecular dynamics simulations
keywords =
    LAMMPS
    Polymer
    SMILES
    Molecular Dynamics
    Simulations
license = MIT
license_files = LICENSE
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/Ramprasad-Group/Polymer-Molecular-Dynamics
project_urls =
    Documentation = https://polymer-molecular-dynamics.netlify.app/
    Source = https://github.com/Ramprasad-Group/Polymer-Molecular-Dynamics
platforms = any

# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Software Development
    Topic :: Utilities

[options]
zip_safe = True
packages = pmd
include_package_data = True
python_requires = >=3.7
# Dependencies of the project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
# install_requires =
#     importlib-metadata
#     pyyaml>=5.0
#     numpy>=1.0
#     pandas>=1.0
#     matplotlib>=3.0
#     scipy>=1.0
#     scikit-learn>=1.0
#     rdkit>=2022.3.3
#     emc-pypi>=1.0.0
#     inquirer>=2.9.2
#     openmol>=1.2.1

# [options.extras_require]
# # Add here test requirements (semicolon/line-separated)
# testing =
#     setuptools
#     pytest
#     pytest-cov

[options.entry_points]
console_scripts =
    pmd-load = pmd.entry.load:main
    pmd-analyze = pmd.entry.analyze:main
    pmd-template = pmd.entry.template:main

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov pmd --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    website
